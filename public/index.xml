<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ricardo's Blog</title><link>https://marliere.net/</link><description>Recent content on Ricardo's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 07 Mar 2024 21:29:33 -0300</lastBuildDate><atom:link href="https://marliere.net/index.xml" rel="self" type="application/rss+xml"/><item><title>Neovim for kernel development</title><link>https://marliere.net/posts/6/</link><pubDate>Thu, 07 Mar 2024 21:29:33 -0300</pubDate><guid>https://marliere.net/posts/6/</guid><description>Neovim is a Vim fork which aims to improve on its predecessor much like how Vim improved Vi. It was started by a Brazilian developer, Thiago de Arruda, mostly to improve Vim&amp;rsquo;s concurrency capabilities. It has been 10 years since and it has gotten very popular so far. Meanwhile, one could argue that it also pushed Vim a little into learning a few new tricks. RIP Bram, by the way, his legacy will be remembered for generations to come.</description></item><item><title>Using ktest.pl for kernel builds and ease of mind</title><link>https://marliere.net/posts/5/</link><pubDate>Sun, 07 Jan 2024 12:30:00 -0300</pubDate><guid>https://marliere.net/posts/5/</guid><description>Introduction Ktest.pl is a powerful script, published in 2010 by Steven Rostedt, long time Linux contributor and Ftrace maintainer. Readily available upstream, along with other useful scripts and tools, you can use it in different ways to automate the process of building, installing and testing the Linux kernel.
Motivation Ever since I restarted doing cross builds more frequently, I would occasionally forget to either set ARCH= or simply do a modules_install.</description></item><item><title>Booting the Raspberry Pi 3 from the network</title><link>https://marliere.net/posts/4/</link><pubDate>Mon, 23 Oct 2023 17:00:00 -0300</pubDate><guid>https://marliere.net/posts/4/</guid><description>The use case is simple: boot a kernel from tftp, mount a root filesystem through NFS. From the minimal kernel built before, you need those symbols:
INET TCP/IP networking NFS_FS Network FS client support (v3) IP_PNP Automatic IP configuration IP_PNP_DHCP DHCP for IP auto config ROOT_NFS Root FS through NFS NETDEVICES Network device support USB_USBNET USB Networking USB_NET_SMSC95XX SMSC LAN95XX Ethernet adapter driver You could drop MMC, since you only need a single FAT32 partition containing the bootloader and firmware:</description></item><item><title>Booting a minimal upstream kernel in a Raspberry Pi 3</title><link>https://marliere.net/posts/3/</link><pubDate>Thu, 12 Oct 2023 10:05:00 -0300</pubDate><guid>https://marliere.net/posts/3/</guid><description>In this post, I will go through the steps for building and booting a linux-next kernel on that board you have gathering dust somewhere.
NOTE: The contents of this post may be outdated by the time you read them.
Back in my Funtoo 1 days, I wrote a nasty script to organize the steps required to have a functioning cross-compilation toolchain in order to build the vendor kernel. It had all sort of weird things that I wanted to learn, such as embedding a dropbear ssh server in the initramfs and filesystem encryption.</description></item><item><title>A better workflow for kernel debugging</title><link>https://marliere.net/posts/2/</link><pubDate>Sun, 08 Oct 2023 15:15:00 -0300</pubDate><guid>https://marliere.net/posts/2/</guid><description>If you followed along my last post, you may have found some difficulties like I did. Namely, making sure the work is done without confusion. In this post I want to share a few tips that helped me stay organized and effective, I hope its helpful to some of you as well.
When I started investigating bugs I used to have a single git tree and then every time I wanted to switch bugs or build a stable kernel it was .</description></item><item><title>A simple workflow to debug the Linux Kernel</title><link>https://marliere.net/posts/1/</link><pubDate>Wed, 06 Sep 2023 15:45:00 -0300</pubDate><guid>https://marliere.net/posts/1/</guid><description>I&amp;rsquo;m happy to announce that I have been accepted as a mentee for the 2023 Fall edition of the &amp;ldquo;Linux Kernel Bug Fixing&amp;rdquo; mentorship from the Linux Foundation. Writing about the experience is one of the required tasks and that is indeed the motivation behind the creation of this blog, although I flirted with the idea before but never got to actually publish anything. Since the main task of the mentorship is to fix bugs, I&amp;rsquo;m gonna try to organize my thoughts about the workflow for accomplishing that in this post.</description></item><item><title>About</title><link>https://marliere.net/about/</link><pubDate>Tue, 05 Sep 2023 21:21:39 -0300</pubDate><guid>https://marliere.net/about/</guid><description>My name is Ricardo, I&amp;rsquo;m a software engineer born in Brazil in July of the year 1991. When I&amp;rsquo;m not at my desk studying about computers and technology or occasionally gaming, I like to play guitar and write songs. I have a small vinyl collection and own a few vintage out of print esoteric books. On some weekends, if I&amp;rsquo;m lucky, I&amp;rsquo;ll be crossing the finish line in a racing car at a track somewhere.</description></item></channel></rss>